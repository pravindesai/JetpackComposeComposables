package com.pravin.jetpackcompose

import androidx.compose.animation.animateContentSize
import androidx.compose.animation.core.LinearOutSlowInEasing
import androidx.compose.animation.core.animateFloatAsState
import androidx.compose.animation.core.tween
import androidx.compose.foundation.layout.Column
import androidx.compose.foundation.layout.Row
import androidx.compose.foundation.layout.fillMaxWidth
import androidx.compose.foundation.layout.padding
import androidx.compose.material.*
import androidx.compose.material.icons.Icons
import androidx.compose.material.icons.filled.ArrowDropDown
import androidx.compose.runtime.Composable
import androidx.compose.runtime.*
import androidx.compose.ui.Alignment
import androidx.compose.ui.Modifier
import androidx.compose.ui.draw.alpha
import androidx.compose.ui.draw.rotate
import androidx.compose.ui.text.font.FontWeight
import androidx.compose.ui.text.style.TextOverflow
import androidx.compose.ui.tooling.preview.Preview
import androidx.compose.ui.unit.dp
import com.pravin.jetpackcompose.ui.theme.Shapes

@ExperimentalMaterialApi
@Composable
fun ExpandableCard(){
    var expandedState by remember { mutableStateOf(false) }
    val rotationState by animateFloatAsState(targetValue = if (expandedState) 180f else 0f)

    Card(modifier = Modifier
        .fillMaxWidth()
        .animateContentSize(
            animationSpec = tween(
                durationMillis = 300,
                easing = LinearOutSlowInEasing
            )
        ),
        shape = Shapes.medium, onClick = {expandedState = !expandedState}
    ) {
        Column(modifier = Modifier
            .fillMaxWidth()
            .padding(12.dp)) {
            Row(verticalAlignment = Alignment.CenterVertically) {
                Text(text = "MyTitle",fontSize = MaterialTheme.typography.h6.fontSize, fontWeight = FontWeight.Bold,
                    maxLines = 1, overflow = TextOverflow.Ellipsis,modifier = Modifier.weight(6f))
                IconButton(modifier = Modifier
                    .alpha(ContentAlpha.medium)
                    .weight(1f)
                    .rotate(rotationState), onClick = {
                    expandedState=!expandedState
                }) {
                    Icon(imageVector = Icons.Default.ArrowDropDown, contentDescription = "drop down arrow")
                }
            }
            if(expandedState){
                Text(text = "Jetpack Compose is Androidâ€™s modern toolkit for building native UI. It simplifies and accelerates UI development on Android. Quickly bring your app to life with less code, powerful tools, and intuitive Kotlin APIs.\n"
                , fontSize = MaterialTheme.typography.subtitle1.fontSize, maxLines = 5, overflow = TextOverflow.Ellipsis)
            }
        }
    }

}

@ExperimentalMaterialApi
@Preview
@Composable
fun ExpandableCardPreview(){
    ExpandableCard()
}